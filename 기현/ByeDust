#include <iostream>

using namespace std;
int room[50][50] = { 0 };
int N, M;

int AC[2];

void print() {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			cout << room[i][j] << ' ';
		}
		cout << endl;
	}
	cout << endl << endl;
}

void dustMove() {//먼지 움직임
	int i, j;
	int dust;
	int save[50][50];

	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			save[i][j] = room[i][j];
		}
	}

	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			if (room[i][j] > 0) {
				dust = save[i][j] / 5;
				if (i > 0 && save[i-1][j]!=-1) {//위
					room[i - 1][j] += dust;
					room[i][j] -= dust;
				}
				if (i < N-1 && save[i+1][j] != -1) {//아래
					room[i+1][j] += dust;
					room[i][j] -= dust;
				}
				if (j > 0 && save[i][j - 1] != -1) {//왼쪽
					room[i][j-1] += dust;
					room[i][j] -= dust;
				}
				if (j < M-1 && save[i][j+1] != -1) {//오른쪽
					room[i][j+1] += dust;
					room[i][j] -= dust;
				}
			}
		}
	}
}

void ACMove(){//공기 청정기
	int i;
	//윗공기
	for (i = AC[0] - 2; i >= 0; i--)
		room[i + 1][0] = room[i][0];
	for (i = 1; i < M; i++)
		room[0][i - 1] = room[0][i];
	for (i = 1; i <= AC[0]; i++)
		room[i - 1][M - 1] = room[i][M-1];
	for (i = M - 1; i > 0; i--)
		room[AC[0]][i] = room[AC[0]][i-1];
	room[AC[0]][1] = 0;

	//아랫공기
	for (i = AC[1] + 2; i < N; i++)
		room[i - 1][0] = room[i][0];

	for (i = 1; i < M; i++) 
		room[N-1][i-1] = room[N-1][i];
	
	for (i = N - 2; i >= AC[1]; i--)
		room[i + 1][M - 1] = room[i][M - 1];
	
	for (i = M - 2; i > 0; i--)
		room[AC[1]][i + 1] = room[AC[1]][i];
	room[AC[1]][1] = 0;
}

int main() {
	
	int sec;
	int i,j;
	int n = 0;
	int sum = 0;

	cin >> N >> M >> sec;

	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			cin >> room[i][j];
		}
	}

	for (i = 2; i < N; i++) {
		if (room[i][0] == -1) {
			AC[0] = i;
			AC[1] = i + 1;
			break;
		}
	}

	for (i = 0; i < sec; i++) {
		dustMove();
		ACMove();
	}

	//print();
	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			if (room[i][j] != -1)
				sum += room[i][j];
		}
	}
	
	cout << sum << endl;

	return 0;
}
